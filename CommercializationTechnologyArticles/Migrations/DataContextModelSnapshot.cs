// <auto-generated />
using System;
using CommercializationTechnologyArticles.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommercializationTechnologyArticles.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommercializationTechnologyArticles.Models.Articles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InternalIdentifier")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerIdentifier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("CommercializationTechnologyArticles.Models.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int?>("ArticlesId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("ArticlesId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CommercializationTechnologyArticles.Models.SubCategories", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategoryId"));

                    b.Property<int?>("ArticlesId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriesCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("ArticlesId");

                    b.HasIndex("CategoriesCategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("CommercializationTechnologyArticles.Models.Categories", b =>
                {
                    b.HasOne("CommercializationTechnologyArticles.Models.Articles", null)
                        .WithMany("Categories")
                        .HasForeignKey("ArticlesId");
                });

            modelBuilder.Entity("CommercializationTechnologyArticles.Models.SubCategories", b =>
                {
                    b.HasOne("CommercializationTechnologyArticles.Models.Articles", null)
                        .WithMany("SubCategories")
                        .HasForeignKey("ArticlesId");

                    b.HasOne("CommercializationTechnologyArticles.Models.Categories", null)
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoriesCategoryId");
                });

            modelBuilder.Entity("CommercializationTechnologyArticles.Models.Articles", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("CommercializationTechnologyArticles.Models.Categories", b =>
                {
                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
